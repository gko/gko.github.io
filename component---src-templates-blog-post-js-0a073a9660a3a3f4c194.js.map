{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Bio.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","_this$props$data$site","site","siteMetadata","siteUrl","siteTitle","title","_this$props$pageConte","pageContext","previous","next","url","slug","tweet","encodeURIComponent","_post$frontmatter","frontmatter","tags","date","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_SEO__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","type","react_helmet__WEBPACK_IMPORTED_MODULE_7__","name","content","kebabCase","src","alt","height","width","className","style","paddingLeft","map","tag","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","format","dangerouslySetInnerHTML","__html","html","href","align","display","flexWrap","justifyContent","listStyle","padding","margin","fields","rel","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","_data$site$siteMetada","author","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","concat","length","join","_public_static_d_1690466472_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Footer","react_default","Date","getFullYear","Layout","header","_this$props","textAlign","gatsby_browser_entry","boxShadow","textDecoration","color","fontWeight","components_Footer","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","social","alignItems","flexDirection","marginTop","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","borderRadius","twitter","github","_public_static_d_2377636077_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-js-0a073a9660a3a3f4c194.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport format from 'date-fns/format'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport { Helmet } from 'react-helmet'\n\nimport kebabCase from 'lodash/kebabCase'\n\nclass BlogPostTemplate extends React.Component {\n    render() {\n        const post = this.props.data.markdownRemark\n        const { siteUrl, title: siteTitle } = this.props.data.site.siteMetadata\n        const { previous, next, slug } = this.props.pageContext\n        const url = `${siteUrl}${slug}`\n        const tweet = encodeURIComponent(url)\n        const { title, tags, date } = post.frontmatter\n\n        return (\n            <Layout location={this.props.location} title={siteTitle}>\n                <SEO\n                    title={title}\n                    description={post.excerpt}\n                    url={url}\n                    type=\"article\"\n                />\n                <Helmet title={title}>\n                    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n                    <meta\n                        name=\"twitter:image\"\n                        content={`${siteUrl}/${kebabCase(title)}.png`}\n                    />\n                    <amp-img src={`${siteUrl}/${kebabCase(title)}.png`} alt={title} height=\"400\" width=\"800\"></amp-img>\n                    <script type=\"application/ld+json\">\n                        {`{\n                      \"@context\": \"http://schema.org\",\n                      \"@type\": \"NewsArticle\",\n                      \"headline\": \"${title}\",\n                      \"datePublished\": \"${date}\",\n                      \"image\": [\n                        \"${siteUrl}/${kebabCase(title)}.png\"\n                      ]\n                    }`}\n                    </script>\n                </Helmet>\n\n                <h1>{post.frontmatter.title}</h1>\n                {tags && (\n                    <ul\n                        className=\"tags\"\n                        style={{\n                            paddingLeft: 0,\n                        }}\n                    >\n                        {tags.map(tag => (\n                            <li key={tag} className=\"tag\">\n                                <Link to={`/tags/${kebabCase(tag)}/`}>\n                                    {tag}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n                <p>{format(date, \"MMMM DD, YYYY\")}</p>\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\n                <hr />\n\n                <p className=\"share\">\n                    <a\n                        className=\"twitter\"\n                        href={`https://twitter.com/intent/tweet?text=${tweet}`}\n                    >\n                        Tweet{' '}\n                        <img\n                            align=\"absmiddle\"\n                            src=\"/twitter-logo.svg\"\n                            alt=\"twitter logo\"\n                        />\n                    </a>\n                </p>\n\n                <ul\n                    className=\"navigation\"\n                    style={{\n                        display: `flex`,\n                        flexWrap: `wrap`,\n                        justifyContent: `space-between`,\n                        listStyle: `none`,\n                        padding: 0,\n                        margin: '2rem 0 0',\n                    }}\n                >\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                <span className=\"arrow\">←</span>{' '}\n                                {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title}{' '}\n                                <span className=\"arrow\">→</span>\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </Layout>\n        )\n    }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n                siteUrl\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                tags\n                date\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title, url, type }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description\n\n                const {\n                    title: siteTitle,\n                    author,\n                    siteUrl,\n                } = data.site.siteMetadata\n\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        title={title}\n                        titleTemplate={`${siteTitle}`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:url`,\n                                content: url || siteUrl,\n                            },\n                            {\n                                property: `og:type`,\n                                content: type || `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                )\n            }}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n                siteUrl\n            }\n        }\n    }\n`\n","import React from 'react'\n\nconst Footer = () => (<footer>\n\t© {(new Date()).getFullYear()},&nbsp;<a href=\"mailto:hi@konstantin.io?subject=hello\">Konstantin</a>\n</footer>)\n\nexport default Footer;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Footer from '../components/Footer';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location && location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            textAlign: 'center'\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3 className=\"backLink\">\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n              fontWeight: 300\n            }}\n            to={`/`}\n          >\n            <span className=\"arrow\">←</span> {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <div>\n        {header}\n        {children}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexDirection: 'column',\n              marginTop: '1em',\n            }}\n            className=\"bio\"\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                borderRadius: `15%`,\n              }}\n            />\n            <p className=\"social\">\n              <a href={`https://twitter.com/${social.twitter}`}>twitter</a>{' '}\n              &bull;&nbsp;\n              <a href={`https://github.com/${social.github}`}>github</a>{' '}\n              &bull;&nbsp;\n              {/*<a href={`https://fr.linkedin.com/in/${social.linkedin}`}>linkedin</a> &bull;&nbsp;*/}\n              <a href=\"/cv\">CV</a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 180, height: 180) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n          linkedin\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}