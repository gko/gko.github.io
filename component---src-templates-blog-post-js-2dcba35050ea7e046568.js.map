{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Bio.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","_this$props$data$site","site","siteMetadata","siteUrl","siteTitle","title","_this$props$pageConte","pageContext","previous","next","slug","tweet","encodeURIComponent","_post$frontmatter","frontmatter","tags","date","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_SEO__WEBPACK_IMPORTED_MODULE_5__","description","excerpt","className","style","paddingLeft","map","tag","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","kebabCase","dangerouslySetInnerHTML","__html","html","href","align","src","alt","display","flexWrap","justifyContent","listStyle","padding","margin","fields","rel","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Footer","react_default","Date","getFullYear","Layout","header","_this$props","textAlign","gatsby_browser_entry","boxShadow","textDecoration","color","fontWeight","components_Footer","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_data$site$siteMetada","social","alignItems","flexDirection","marginTop","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","borderRadius","twitter","github","_public_static_d_2377636077_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-js-2dcba35050ea7e046568.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\n\nimport kebabCase from \"lodash/kebabCase\"\n\n\t//</Link>\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const { siteUrl, title: siteTitle } = this.props.data.site.siteMetadata\n    const { previous, next, slug } = this.props.pageContext\n    const tweet = encodeURIComponent(`${siteUrl}${slug}`)\n    const { title, tags, date } = post.frontmatter\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={title} description={post.excerpt} />\n        <h1>{post.frontmatter.title}</h1>\n        {tags && (\n          <ul\n            className=\"tags\"\n            style={{\n              paddingLeft: 0,\n            }}\n          >\n            {tags.map(tag => (\n\t\t\t\t\t\t\t<li key={tag} className=\"tag\">\n\t\t\t\t\t\t\t\t<Link to={`/tags/${kebabCase(tag)}/`}>\n\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t</Link>\n              </li>\n\t\t\t\t\t\t))}\n          </ul>\n        )}\n        <p>{date}</p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr />\n\n        <p className=\"share\">\n          <a\n            className=\"twitter\"\n            href={`https://twitter.com/intent/tweet?text=${tweet}`}\n          >\n            Tweet{' '}\n            <img align=\"absmiddle\" src=\"/twitter-logo.svg\" alt=\"twitter logo\" />\n          </a>\n        </p>\n\n        <ul\n          className=\"navigation\"\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n            margin: '2rem 0 0',\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                <span className=\"arrow\">←</span> {title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {title} <span className=\"arrow\">→</span>\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n\t\t\trender={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\n\nconst Footer = () => (<footer>\n\t© {(new Date()).getFullYear()},&nbsp;<a href=\"mailto:hi@konstantin.io?subject=hello\">Konstantin</a>\n</footer>)\n\nexport default Footer;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Footer from '../components/Footer';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location && location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            textAlign: 'center'\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3 className=\"backLink\">\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n              fontWeight: 300\n            }}\n            to={`/`}\n          >\n            <span className=\"arrow\">←</span> {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <div>\n        {header}\n        {children}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexDirection: 'column',\n              marginTop: '1em',\n            }}\n            className=\"bio\"\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                borderRadius: `15%`,\n              }}\n            />\n            <p className=\"social\">\n              <a href={`https://twitter.com/${social.twitter}`}>twitter</a>{' '}\n              &bull;&nbsp;\n              <a href={`https://github.com/${social.github}`}>github</a>{' '}\n              &bull;&nbsp;\n              {/*<a href={`https://fr.linkedin.com/in/${social.linkedin}`}>linkedin</a> &bull;&nbsp;*/}\n              <a href=\"/cv\">CV</a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 180, height: 180) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n          linkedin\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}