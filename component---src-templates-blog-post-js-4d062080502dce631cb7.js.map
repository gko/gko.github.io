{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","_this$props$data$site","site","siteMetadata","siteUrl","siteTitle","title","repository","_this$props$pageConte","pageContext","previous","next","slug","filename","url","tweet","encodeURIComponent","_post$frontmatter","frontmatter","tags","date","cover_image","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_SEO__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","type","react_helmet__WEBPACK_IMPORTED_MODULE_7__","rel","href","name","content","kebabCase","property","className","style","paddingLeft","map","tag","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","format","dangerouslySetInnerHTML","__html","html","align","src","alt","react_icons_fa__WEBPACK_IMPORTED_MODULE_4__","size","display","flexWrap","justifyContent","listStyle","padding","margin","fields","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","_data$site$siteMetada","author","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","concat","length","join","_public_static_d_1690466472_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Footer","react_default","Date","getFullYear","Layout","header","_this$props","textAlign","gatsby_browser_entry","boxShadow","textDecoration","color","fontWeight","components_Footer"],"mappings":"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","file":"component---src-templates-blog-post-js-4d062080502dce631cb7.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport format from 'date-fns/format'\nimport { FaPen } from 'react-icons/fa'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport { Helmet } from 'react-helmet'\n\nimport kebabCase from 'lodash/kebabCase'\n\nclass BlogPostTemplate extends React.Component {\n    render() {\n        const post = this.props.data.markdownRemark\n        const {\n            siteUrl,\n            title: siteTitle,\n            repository\n        } = this.props.data.site.siteMetadata\n\n        const { previous, next, slug, filename } = this.props.pageContext\n        const url = `${siteUrl}${slug}`\n        const tweet = encodeURIComponent(url)\n        const { title, tags, date, cover_image } = post.frontmatter\n\n        return (\n            <Layout location={this.props.location} title={siteTitle}>\n                <SEO\n                    title={title}\n                    description={post.excerpt}\n                    url={url}\n                    type=\"article\"\n                />\n\n                <Helmet title={title}>\n                    <link rel=\"amphtml\" href={url + 'amp'} />\n                    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n                    <meta\n                        name=\"twitter:image\"\n                        content={cover_image || `${siteUrl}/${kebabCase(title)}.png`}\n                    />\n                    <meta\n                        property=\"og:image\"\n                        content={cover_image || `${siteUrl}/${kebabCase(title)}.png`}\n                    />\n                </Helmet>\n\n                <h1>{post.frontmatter.title}</h1>\n                {tags && (\n                    <ul\n                        className=\"tags\"\n                        style={{\n                            paddingLeft: 0,\n                        }}\n                    >\n                        {tags.map(tag => (\n                            <li key={tag} className=\"tag\">\n                                <Link to={`/tags/${kebabCase(tag)}/`}>\n                                    {tag}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n                <p>{format(date, 'MMMM DD, YYYY')}</p>\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\n                <hr />\n\n                <p className=\"share\">\n                    <a\n                        className=\"twitter\"\n                        href={`https://twitter.com/intent/tweet?text=${tweet}`}\n                    >\n                        Tweet{' '}\n                        <img\n                            align=\"absmiddle\"\n                            src=\"/twitter-logo.svg\"\n                            alt=\"twitter logo\"\n                        />\n                    </a>\n\n                    <a\n                        className=\"edit\"\n                        href={`${repository}/edit/dev/src/posts/${filename}`}\n                    >\n                        <FaPen size=\"0.8em\" />\n                    </a>\n                </p>\n\n                <ul\n                    className=\"navigation\"\n                    style={{\n                        display: `flex`,\n                        flexWrap: `wrap`,\n                        justifyContent: `space-between`,\n                        listStyle: `none`,\n                        padding: 0,\n                        margin: '2rem 0 0',\n                    }}\n                >\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                <span className=\"arrow\">←</span>{' '}\n                                {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title}{' '}\n                                <span className=\"arrow\">→</span>\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </Layout>\n        )\n    }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n                siteUrl\n                repository\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                tags\n                date\n                cover_image\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title, url, type }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description\n\n                const {\n                    title: siteTitle,\n                    author,\n                    siteUrl,\n                } = data.site.siteMetadata\n\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        titleTemplate={`%s — ${siteTitle}`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:url`,\n                                content: url || siteUrl,\n                            },\n                            {\n                                property: `og:type`,\n                                content: type || `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                )\n            }}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n                siteUrl\n            }\n        }\n    }\n`\n","import React from 'react'\n\nconst Footer = () => (<footer>\n\t© {(new Date()).getFullYear()},&nbsp;<a href=\"mailto:hi@konstantin.io?subject=hello\">Konstantin</a>\n</footer>)\n\nexport default Footer;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Footer from '../components/Footer';\n\nclass Layout extends React.Component {\n    render() {\n        const { location, title, children } = this.props\n        const rootPath = `${__PATH_PREFIX__}/`\n        let header\n\n        if (location && location.pathname === rootPath) {\n            header = (\n                <h1\n                    style={{\n                        textAlign: 'center'\n                    }}\n                >\n                    {/* <Link\n                        style={{\n                            boxShadow: `none`,\n                            textDecoration: `none`,\n                            color: `inherit`,\n                        }}\n                        to={`/`}\n                    > */}\n                    {title}\n                    {/* </Link> */}\n                </h1>\n            )\n        } else {\n            header = (\n                <h3 className=\"backLink\">\n                    <Link\n                        style={{\n                            boxShadow: `none`,\n                            textDecoration: `none`,\n                            color: `inherit`,\n                            fontWeight: 300\n                        }}\n                        to={`/`}\n                    >\n                        <span className=\"arrow\">←</span> {title}\n                    </Link>\n                </h3>\n            )\n        }\n\n        return (\n            <div>\n                {header}\n                {children}\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default Layout\n"],"sourceRoot":""}