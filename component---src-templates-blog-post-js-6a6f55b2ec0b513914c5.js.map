{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","_this$props$data$site","site","siteMetadata","siteUrl","siteTitle","title","repository","_this$props$pageConte","pageContext","previous","next","slug","filename","url","tweet","encodeURIComponent","_post$frontmatter","frontmatter","tags","date","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_SEO__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","type","react_helmet__WEBPACK_IMPORTED_MODULE_7__","name","content","kebabCase","src","alt","height","width","className","style","paddingLeft","map","tag","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","format","dangerouslySetInnerHTML","__html","html","href","align","react_icons_fa__WEBPACK_IMPORTED_MODULE_4__","size","display","flexWrap","justifyContent","listStyle","padding","margin","fields","rel","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","_data$site$siteMetada","author","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","concat","length","join","_public_static_d_1690466472_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Footer","react_default","Date","getFullYear","Layout","header","_this$props","textAlign","gatsby_browser_entry","boxShadow","textDecoration","color","fontWeight","components_Footer"],"mappings":"8PAWMA,4FACFC,OAAA,WACI,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eADxBC,EAMDJ,KAAKC,MAAMC,KAAKG,KAAKC,aAHrBC,EAHCH,EAGDG,QACOC,EAJNJ,EAIDK,MACAC,EALCN,EAKDM,WALCC,EAOsCX,KAAKC,MAAMW,YAA9CC,EAPHF,EAOGE,SAAUC,EAPbH,EAOaG,KAAMC,EAPnBJ,EAOmBI,KAAMC,EAPzBL,EAOyBK,SACxBC,EAAG,GAAMV,EAAUQ,EACnBG,EAAQC,mBAAmBF,GAT5BG,EAUyBrB,EAAKsB,YAA3BZ,EAVHW,EAUGX,MAAOa,EAVVF,EAUUE,KAAMC,EAVhBH,EAUgBG,KAErB,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAU5B,KAAKC,MAAM2B,SAAUnB,MAAOD,GAC1CgB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIpB,MAAOA,EACPqB,YAAa/B,EAAKgC,QAClBd,IAAKA,EACLe,KAAK,YAETR,EAAAC,EAAAC,cAACO,EAAA,OAAD,CAAQxB,MAAOA,GACXe,EAAAC,EAAAC,cAAA,QAAMQ,KAAK,eAAeC,QAAQ,wBAClCX,EAAAC,EAAAC,cAAA,QACIQ,KAAK,gBACLC,QAAY5B,EAAL,IAAgB6B,IAAU3B,GAA1B,SAEXe,EAAAC,EAAAC,cAAA,WACIW,IAAQ9B,EAAL,IAAgB6B,IAAU3B,GAA1B,OACH6B,IAAK7B,EACL8B,OAAO,MACPC,MAAM,QAEVhB,EAAAC,EAAAC,cAAA,UAAQM,KAAK,uBAAb,gJAIiBvB,EAJjB,+CAKsBc,EALtB,8CAMqBA,EANrB,kQAYyBhB,EAZzB,IAYoC6B,IAAU3B,GAZ9C,kEAcOF,EAdP,IAckB6B,IAAU3B,GAd5B,0DAoBJe,EAAAC,EAAAC,cAAA,UAAK3B,EAAKsB,YAAYZ,OACrBa,GACGE,EAAAC,EAAAC,cAAA,MACIe,UAAU,OACVC,MAAO,CACHC,YAAa,IAGhBrB,EAAKsB,IAAI,SAAAC,GAAG,OACTrB,EAAAC,EAAAC,cAAA,MAAIoB,IAAKD,EAAKJ,UAAU,OACpBjB,EAAAC,EAAAC,cAACqB,EAAA,KAAD,CAAMC,GAAE,SAAWZ,IAAUS,GAArB,KACHA,OAMrBrB,EAAAC,EAAAC,cAAA,SAAIuB,IAAO1B,EAAM,kBACjBC,EAAAC,EAAAC,cAAA,OAAKwB,wBAAyB,CAAEC,OAAQpD,EAAKqD,QAC7C5B,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,KAAGe,UAAU,SACTjB,EAAAC,EAAAC,cAAA,KACIe,UAAU,UACVY,KAAI,yCAA2CnC,GAFnD,QAIU,IACNM,EAAAC,EAAAC,cAAA,OACI4B,MAAM,YACNjB,IAAI,oBACJC,IAAI,kBAIZd,EAAAC,EAAAC,cAAA,KAAGe,UAAU,OAAOY,KAAS3C,EAAL,uBAAsCM,GAC1DQ,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAOC,KAAK,YAIpBhC,EAAAC,EAAAC,cAAA,MACIe,UAAU,aACVC,MAAO,CACHe,QAAO,OACPC,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,EACTC,OAAQ,aAGZtC,EAAAC,EAAAC,cAAA,UACKb,GACGW,EAAAC,EAAAC,cAACqB,EAAA,KAAD,CAAMC,GAAInC,EAASkD,OAAOhD,KAAMiD,IAAI,QAChCxC,EAAAC,EAAAC,cAAA,QAAMe,UAAU,SAAhB,KAAiC,IAChC5B,EAASQ,YAAYZ,QAIlCe,EAAAC,EAAAC,cAAA,UACKZ,GACGU,EAAAC,EAAAC,cAACqB,EAAA,KAAD,CAAMC,GAAIlC,EAAKiD,OAAOhD,KAAMiD,IAAI,QAC3BlD,EAAKO,YAAYZ,MAAO,IACzBe,EAAAC,EAAAC,cAAA,QAAMe,UAAU,SAAhB,aAnHDwB,IAAMC,WA6HtBrE,YAER,IAAMsE,EAAS,8CC1ItBC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAAxD,IAAA2C,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAA1D,IAAA,IAAA2D,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBR,IAAMoB,cAAc,IAEzCX,EAAc,SAAAzE,GAAK,OACvB2E,EAAAnD,EAAAC,cAAC+C,EAAmBa,SAApB,KACG,SAAAC,GACC,OACEtF,EAAMC,MACLqF,EAAgBtF,EAAMuF,QAAUD,EAAgBtF,EAAMuF,OAAOtF,MAEtDD,EAAMH,QAAUG,EAAMwF,UAC5BxF,EAAMC,KAAOD,EAAMC,KAAKA,KAAOqF,EAAgBtF,EAAMuF,OAAOtF,MAGvD0E,EAAAnD,EAAAC,cAAA,uCAaf,SAAS8C,IACP,MAAM,IAAIkB,MACR,gVATJhB,EAAYiB,UAAY,CACtBzF,KAAM0F,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBjG,OAAQ8F,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAf3E,EAAe2E,EAAf3E,SACpB4E,EAAgBC,UAAOC,4BAA4B9E,EAAS+E,UAClE,OAAO1C,IAAMvC,cAAckF,IAApBC,OAAAC,OAAA,CACLlF,WACA4E,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3B/D,SAAUgE,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,6GChBf,SAASW,EAATV,GAAsE,IAAvDzE,EAAuDyE,EAAvDzE,YAAaoF,EAA0CX,EAA1CW,KAAMC,EAAoCZ,EAApCY,KAAMC,EAA8Bb,EAA9Ba,SAAU3G,EAAoB8F,EAApB9F,MAAOQ,EAAasF,EAAbtF,IAAKe,EAAQuE,EAARvE,KAC1D,OACIR,EAAAC,EAAAC,cAAC2F,EAAA,YAAD,CACI7B,MAAO8B,EACPxH,OAAQ,SAAAI,GACJ,IAAMqH,EACFzF,GAAe5B,EAAKG,KAAKC,aAAawB,YAF9B0F,EAQRtH,EAAKG,KAAKC,aAHHE,EALCgH,EAKR/G,MACAgH,EANQD,EAMRC,OACAlH,EAPQiH,EAORjH,QAGJ,OACIiB,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,CACIkG,eAAgB,CACZT,QAEJzG,MAAOA,EACPmH,cAAa,GAAKpH,EAClB2G,KAAM,CACF,CACIjF,KAAI,cACJC,QAASoF,GAEb,CACIM,SAAQ,WACR1F,QAAS1B,GAEb,CACIoH,SAAQ,iBACR1F,QAASoF,GAEb,CACIM,SAAQ,SACR1F,QAASlB,GAAOV,GAEpB,CACIsH,SAAQ,UACR1F,QAASH,GAAI,WAEjB,CACIE,KAAI,eACJC,QAAO,WAEX,CACID,KAAI,kBACJC,QAASsF,GAEb,CACIvF,KAAI,gBACJC,QAAS1B,GAEb,CACIyB,KAAI,sBACJC,QAASoF,IAGZO,OACGV,EAASW,OAAS,EACZ,CACI7F,KAAI,WACJC,QAASiF,EAASY,KAAT,OAEb,IAETF,OAAOX,MAjE5BjH,KAAA+H,IAyERhB,EAAIiB,aAAe,CACfhB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGCH,MAEf,IAAMK,EAAY,wRClFHa,EAJA,kBAAOC,EAAA3G,EAAAC,cAAA,oBACjB,IAAI2G,MAAQC,cADK,KACgBF,EAAA3G,EAAAC,cAAA,KAAG2B,KAAK,yCAAR,gBCChCkF,4FACJzI,OAAA,WAAS,IAGH0I,EAHGC,EAC+BzI,KAAKC,MAAnC2B,EADD6G,EACC7G,SAAUnB,EADXgI,EACWhI,MAAOgF,EADlBgD,EACkBhD,SAyCzB,OApCE+C,EADE5G,GAHU,MAGEA,EAAS+E,SAErByB,EAAA3G,EAAAC,cAAA,MACEgB,MAAO,CACLgG,UAAW,WAGbN,EAAA3G,EAAAC,cAACiH,EAAA,KAAD,CACEjG,MAAO,CACLkG,UAAS,OACTC,eAAc,OACdC,MAAK,WAEP9F,GAAE,KAEDvC,IAML2H,EAAA3G,EAAAC,cAAA,MAAIe,UAAU,YACZ2F,EAAA3G,EAAAC,cAACiH,EAAA,KAAD,CACEjG,MAAO,CACLkG,UAAS,OACTC,eAAc,OACdC,MAAK,UACLC,WAAY,KAEd/F,GAAE,KAEFoF,EAAA3G,EAAAC,cAAA,QAAMe,UAAU,SAAhB,KATF,IASoChC,IAOxC2H,EAAA3G,EAAAC,cAAA,WACG8G,EACA/C,EACD2C,EAAA3G,EAAAC,cAACsH,EAAD,WA/Ca/E,IAAMC,WAqDZqE","file":"component---src-templates-blog-post-js-6a6f55b2ec0b513914c5.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport format from 'date-fns/format'\nimport { FaPen } from 'react-icons/fa'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport { Helmet } from 'react-helmet'\n\nimport kebabCase from 'lodash/kebabCase'\n\nclass BlogPostTemplate extends React.Component {\n    render() {\n        const post = this.props.data.markdownRemark\n        const {\n            siteUrl,\n            title: siteTitle,\n            repository,\n        } = this.props.data.site.siteMetadata\n        const { previous, next, slug, filename } = this.props.pageContext\n        const url = `${siteUrl}${slug}`\n        const tweet = encodeURIComponent(url)\n        const { title, tags, date } = post.frontmatter\n\n        return (\n            <Layout location={this.props.location} title={siteTitle}>\n                <SEO\n                    title={title}\n                    description={post.excerpt}\n                    url={url}\n                    type=\"article\"\n                />\n                <Helmet title={title}>\n                    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n                    <meta\n                        name=\"twitter:image\"\n                        content={`${siteUrl}/${kebabCase(title)}.png`}\n                    />\n                    <amp-img\n                        src={`${siteUrl}/${kebabCase(title)}.png`}\n                        alt={title}\n                        height=\"400\"\n                        width=\"800\"\n                    />\n                    <script type=\"application/ld+json\">\n                        {`{\n                      \"@context\": \"http://schema.org\",\n                      \"@type\": \"NewsArticle\",\n                      \"headline\": \"${title}\",\n                      \"datePublished\": \"${date}\",\n                      \"dateModified\": \"${date}\",\n                      \"author\": \"Konstantin\",\n                      \"publisher\": {\n                        type: \"Person\",\n                        name: \"Konstantin Gorodinskiy\"\n                      },\n                      \"mainEntityOfPage\": \"${siteUrl}/${kebabCase(title)}\",\n                      \"image\": [\n                        \"${siteUrl}/${kebabCase(title)}.png\"\n                      ]\n                    }`}\n                    </script>\n                </Helmet>\n\n                <h1>{post.frontmatter.title}</h1>\n                {tags && (\n                    <ul\n                        className=\"tags\"\n                        style={{\n                            paddingLeft: 0,\n                        }}\n                    >\n                        {tags.map(tag => (\n                            <li key={tag} className=\"tag\">\n                                <Link to={`/tags/${kebabCase(tag)}/`}>\n                                    {tag}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n                <p>{format(date, 'MMMM DD, YYYY')}</p>\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\n                <hr />\n\n                <p className=\"share\">\n                    <a\n                        className=\"twitter\"\n                        href={`https://twitter.com/intent/tweet?text=${tweet}`}\n                    >\n                        Tweet{' '}\n                        <img\n                            align=\"absmiddle\"\n                            src=\"/twitter-logo.svg\"\n                            alt=\"twitter logo\"\n                        />\n                    </a>\n\n                    <a className=\"edit\" href={`${repository}/edit/dev/src/posts/${filename}`}>\n                        <FaPen size=\"0.8em\" />\n                    </a>\n                </p>\n\n                <ul\n                    className=\"navigation\"\n                    style={{\n                        display: `flex`,\n                        flexWrap: `wrap`,\n                        justifyContent: `space-between`,\n                        listStyle: `none`,\n                        padding: 0,\n                        margin: '2rem 0 0',\n                    }}\n                >\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                <span className=\"arrow\">←</span>{' '}\n                                {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title}{' '}\n                                <span className=\"arrow\">→</span>\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </Layout>\n        )\n    }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n                siteUrl\n                repository\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                tags\n                date\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title, url, type }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description\n\n                const {\n                    title: siteTitle,\n                    author,\n                    siteUrl,\n                } = data.site.siteMetadata\n\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        title={title}\n                        titleTemplate={`${siteTitle}`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:url`,\n                                content: url || siteUrl,\n                            },\n                            {\n                                property: `og:type`,\n                                content: type || `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                )\n            }}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n                siteUrl\n            }\n        }\n    }\n`\n","import React from 'react'\n\nconst Footer = () => (<footer>\n\t© {(new Date()).getFullYear()},&nbsp;<a href=\"mailto:hi@konstantin.io?subject=hello\">Konstantin</a>\n</footer>)\n\nexport default Footer;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Footer from '../components/Footer';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location && location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            textAlign: 'center'\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3 className=\"backLink\">\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n              fontWeight: 300\n            }}\n            to={`/`}\n          >\n            <span className=\"arrow\">←</span> {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <div>\n        {header}\n        {children}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}