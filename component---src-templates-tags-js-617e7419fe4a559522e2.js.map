{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js"],"names":["Tags","render","tag","this","props","pageContext","_this$props$data$allM","data","allMarkdownRemark","edges","totalCount","_this$props$data$site","site","siteMetadata","siteTitle","siteUrl","title","tagHeader","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_SEO__WEBPACK_IMPORTED_MODULE_4__","map","_ref","node","slug","fields","frontmatter","key","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","url","type","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","_data$site$siteMetada","author","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1690466472_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Footer","react_default","Date","getFullYear","href","Layout","header","_this$props","style","textAlign","className","gatsby_browser_entry","boxShadow","textDecoration","color","fontWeight","components_Footer"],"mappings":"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","file":"component---src-templates-tags-js-617e7419fe4a559522e2.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\n\n// Components\nimport { Link, graphql } from 'gatsby'\n\nclass Tags extends React.Component {\n    render() {\n        const { tag } = this.props.pageContext\n        const { edges, totalCount } = this.props.data.allMarkdownRemark\n        const { siteUrl, title: siteTitle } = this.props.data.site.siteMetadata\n        const tagHeader = `${totalCount} post${\n            totalCount === 1 ? '' : 's'\n        } tagged with \"${tag}\"`\n\n        return (\n            <Layout title={siteTitle}>\n                <SEO title={tagHeader} />\n                <h1>{tagHeader}</h1>\n                <ul>\n                    {edges.map(({ node }) => {\n                        const { slug } = node.fields\n                        const { title } = node.frontmatter\n                        return (\n                            <li key={slug}>\n                                <Link to={slug}>{title}</Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n                <Link to=\"/tags\">All tags</Link>\n            </Layout>\n        )\n    }\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n    query($tag: String) {\n        site {\n            siteMetadata {\n                title\n                author\n                siteUrl\n            }\n        }\n        allMarkdownRemark(\n            limit: 2000\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: {\n                frontmatter: {\n                    tags: { in: [$tag] }\n                    published: { ne: false, ne: null }\n                }\n            }\n        ) {\n            totalCount\n            edges {\n                node {\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                    }\n                }\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title, url, type }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description\n\n                const {\n                    title: siteTitle,\n                    author,\n                    siteUrl,\n                } = data.site.siteMetadata\n\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        titleTemplate={`%s — ${siteTitle}`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:url`,\n                                content: url || siteUrl,\n                            },\n                            {\n                                property: `og:type`,\n                                content: type || `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                )\n            }}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n                siteUrl\n            }\n        }\n    }\n`\n","import React from 'react'\n\nconst Footer = () => (<footer>\n\t© {(new Date()).getFullYear()},&nbsp;<a href=\"mailto:hi@konstantin.io?subject=hello\">Konstantin</a>\n</footer>)\n\nexport default Footer;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Footer from '../components/Footer';\n\nclass Layout extends React.Component {\n    render() {\n        const { location, title, children } = this.props\n        const rootPath = `${__PATH_PREFIX__}/`\n        let header\n\n        if (location && location.pathname === rootPath) {\n            header = (\n                <h1\n                    style={{\n                        textAlign: 'center'\n                    }}\n                >\n                    {/* <Link\n                        style={{\n                            boxShadow: `none`,\n                            textDecoration: `none`,\n                            color: `inherit`,\n                        }}\n                        to={`/`}\n                    > */}\n                    {title}\n                    {/* </Link> */}\n                </h1>\n            )\n        } else {\n            header = (\n                <h3 className=\"backLink\">\n                    <Link\n                        style={{\n                            boxShadow: `none`,\n                            textDecoration: `none`,\n                            color: `inherit`,\n                            fontWeight: 300\n                        }}\n                        to={`/`}\n                    >\n                        <span className=\"arrow\">←</span> {title}\n                    </Link>\n                </h3>\n            )\n        }\n\n        return (\n            <div>\n                {header}\n                {children}\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default Layout\n"],"sourceRoot":""}