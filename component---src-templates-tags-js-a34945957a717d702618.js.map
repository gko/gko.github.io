{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","_React$Component","apply","arguments","_inheritsLoose","prototype","render","tag","this","props","pageContext","edges","totalCount","data","allMarkdownRemark","siteUrl","title","siteTitle","site","siteMetadata","tagHeader","React","createElement","Layout","SEO","map","_ref","node","slug","fields","frontmatter","key","Link","to","Component"],"mappings":"4KAMsC,IAEhCA,EAAI,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KA2BL,OA3BKC,YAAAJ,EAAAC,GAAAD,EAAAK,UACNC,OAAA,WACI,MAAM,IAAEC,GAAQC,KAAKC,MAAMC,aACrB,MAAEC,EAAK,WAAEC,GAAeJ,KAAKC,MAAMI,KAAKC,mBACxC,QAAEC,EAASC,MAAOC,GAAcT,KAAKC,MAAMI,KAAKK,KAAKC,aACrDC,EAAY,GAAGR,SACF,IAAfA,EAAmB,GAAK,oBACXL,KAEjB,OACIc,IAAAC,cAACC,IAAM,CAACP,MAAOC,GACXI,IAAAC,cAACE,IAAG,CAACR,MAAOI,IACZC,IAAAC,cAAA,UAAKF,GACLC,IAAAC,cAAA,UACKX,EAAMc,IAAIC,IAAe,IAAd,KAAEC,GAAMD,EAChB,MAAM,KAAEE,GAASD,EAAKE,QAChB,MAAEb,GAAUW,EAAKG,YACvB,OACIT,IAAAC,cAAA,MAAIS,IAAKH,GACLP,IAAAC,cAACU,IAAI,CAACC,GAAIL,GAAOZ,OAKjCK,IAAAC,cAACU,IAAI,CAACC,GAAG,SAAQ,cAG5BjC,EA3BK,CAASqB,IAAMa,WA8BVlC","file":"component---src-templates-tags-js-a34945957a717d702618.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\n\n// Components\nimport { Link, graphql } from 'gatsby'\n\nclass Tags extends React.Component {\n    render() {\n        const { tag } = this.props.pageContext\n        const { edges, totalCount } = this.props.data.allMarkdownRemark\n        const { siteUrl, title: siteTitle } = this.props.data.site.siteMetadata\n        const tagHeader = `${totalCount} post${\n            totalCount === 1 ? '' : 's'\n        } tagged with \"${tag}\"`\n\n        return (\n            <Layout title={siteTitle}>\n                <SEO title={tagHeader} />\n                <h1>{tagHeader}</h1>\n                <ul>\n                    {edges.map(({ node }) => {\n                        const { slug } = node.fields\n                        const { title } = node.frontmatter\n                        return (\n                            <li key={slug}>\n                                <Link to={slug}>{title}</Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n                <Link to=\"/tags\">All tags</Link>\n            </Layout>\n        )\n    }\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n    query($tag: String) {\n        site {\n            siteMetadata {\n                title\n                author\n                siteUrl\n            }\n        }\n        allMarkdownRemark(\n            limit: 2000\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: {\n                frontmatter: {\n                    tags: { in: [$tag] }\n                    published: { nin: [false, null] }\n                }\n            }\n        ) {\n            totalCount\n            edges {\n                node {\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                    }\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}