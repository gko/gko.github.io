{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js"],"names":["Tags","render","tag","this","props","pageContext","_this$props$data$allM","data","allMarkdownRemark","edges","totalCount","_this$props$data$site","site","siteMetadata","siteTitle","siteUrl","title","tagHeader","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_SEO__WEBPACK_IMPORTED_MODULE_4__","map","_ref","node","slug","fields","frontmatter","key","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Footer","react_default","Date","getFullYear","href","Layout","header","_this$props","style","textAlign","gatsby_browser_entry","boxShadow","textDecoration","color","className","fontWeight","components_Footer"],"mappings":"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","file":"component---src-templates-tags-js-fc76c39715de60ede46f.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nclass Tags extends React.Component {\n  render() {\n\t\tconst { tag } = this.props.pageContext\n\t\tconst { edges, totalCount } = this.props.data.allMarkdownRemark\n    const { siteUrl, title: siteTitle } = this.props.data.site.siteMetadata\n\t\tconst tagHeader = `${totalCount} post${\n\t\t\ttotalCount === 1 ? \"\" : \"s\"\n\t\t} tagged with \"${tag}\"`\n\n\t\treturn (\n\t\t\t<Layout title={siteTitle}>\n\t\t\t\t<SEO title={tagHeader} />\n\t\t\t\t<h1>{tagHeader}</h1>\n\t\t\t\t<ul>\n\t\t\t\t\t{edges.map(({ node }) => {\n\t\t\t\t\t\tconst { slug } = node.fields;\n\t\t\t\t\t\tconst { title } = node.frontmatter\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={slug}>\n\t\t\t\t\t\t\t\t<Link to={slug}>{title}</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t<Link to=\"/tags\">All tags</Link>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n        author,\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n\t\t\tfilter: {\n\t\t\t\tfrontmatter: {\n\t\t\t\t\ttags: { in: [$tag] }\n\t\t\t\t\tpublished: {\n\t\t\t\t\t\tne: false\n\t\t\t\t\t\tne: null\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n    ) {\n      totalCount\n      edges {\n        node {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n\t\t\trender={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\n\nconst Footer = () => (<footer>\n\t© {(new Date()).getFullYear()},&nbsp;<a href=\"mailto:hi@konstantin.io?subject=hello\">Konstantin</a>\n</footer>)\n\nexport default Footer;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Footer from '../components/Footer';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location && location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            textAlign: 'center'\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3 className=\"backLink\">\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n              fontWeight: 300\n            }}\n            to={`/`}\n          >\n            <span className=\"arrow\">←</span> {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <div>\n        {header}\n        {children}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}