{"data":{"site":{"siteMetadata":{"title":"Konstantin","author":"Konstantin","siteUrl":"https://konstantin.io","repository":"https://github.com/gko/gko.github.io"}},"markdownRemark":{"id":"e066d596-51d1-5980-9117-968f69743b71","excerpt":"Often I see developers tweet their git aliases and most of the time they are using standard alias functionality of their shell. Kind of like that:\n  actually…","html":"<p>Often I see developers tweet their git aliases and most of the time they are using standard alias functionality of their shell. Kind of like that:\n<code class=\"language-text\">alias gs = git status</code></p>\n<p><code class=\"language-text\">git</code> actually provides you with the ability to make an alias for some git command or even create your own command. You can do it in the <code class=\"language-text\">[alias]</code> section of your <code class=\"language-text\">.gitconfig</code> file(which can be found in your user’s home folder).</p>\n<h2>Aliases</h2>\n<p>So for instance if we take the previous example, you can write something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[alias]\n  s = status</code></pre></div>\n<p>and you will be able to use it as following:\n<code class=\"language-text\">git s</code></p>\n<p>Now you might say that it is much longer then «gs». But you can also make an alias for git itself in your shell:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">  alias g = git</code></pre></div>\n<p>and so now you can simply call your alias by typing <code class=\"language-text\">g s</code>.</p>\n<h2>Custom commands</h2>\n<p>Apart from aliases you can actually create some really cool custom commands. For instance, we can add an alias to see last 10 branches that you’ve checked out:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[alias]\n  recent = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format=&quot;%(refname:short)&quot;</code></pre></div>\n<p>Which I shamelessly picked from <a href=\"https://csswizardry.com/2017/05/little-things-i-like-to-do-with-git/\">csswizardry’s article</a>. When you run it(<code class=\"language-text\">g recent</code>) you’ll see a list of your last ten branches(or less if you haven’t checked out ten).</p>\n<h2>Using shell within git alias</h2>\n<p>You can also do «shell evaluate» within git alias:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[alias]\n  compare = &quot;!f() { git log --oneline $1..$2; }; f&quot;</code></pre></div>\n<p>Here we define an alias, that contains an anonymous function that is invoked straight away. We can also pass parameters to this function. In this example we pass two revisions or branches so that we get a list of commits that differs them.</p>\n<p>You can use this alias as follows:\n<code class=\"language-text\">g compare branch1 branch2</code></p>\n<h2>More stuff</h2>\n<p>You can see the examples above and some other cool stuff in the <a href=\"https://github.com/gko/dotfiles/blob/master/.gitconfig\">gitconfig file</a> from my <a href=\"https://github.com/gko/dotfiles\">dotfiles repo</a>.</p>","frontmatter":{"title":"Aliases git way","tags":["git","alias","gitconfig","shell"],"date":"2019-04-01T00:00:00.000Z","cover_image":"https://thepracticaldev.s3.amazonaws.com/i/hk8d7hycjb9epklumqf1.png"},"fields":{"slug":"/git-alias/"}}},"pageContext":{"slug":"/git-alias/","previous":{"fields":{"slug":"/font-display/"},"frontmatter":{"title":"How to avoid blank font","tags":["css","fonts","font-display"],"published":true,"slug":null,"cover_image":null},"fileAbsolutePath":"/builds/gko/gko-github-io/src/posts/font-display.md"},"next":null,"filename":"git-alias.md"}}