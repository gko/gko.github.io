{"data":{"site":{"siteMetadata":{"title":"Konstantin Gorodinskiy","author":"Konstantin","siteUrl":"https://konstantin.io","repository":"https://github.com/gko/gko.github.io"}},"markdownRemark":{"id":"ea5fcd6e-e7db-5a71-8517-bfdb1e7590e4","excerpt":"There are many tutorials on how to run a gatsby website with github pages, but most if not all of them are focused on how to generate a website for your…","html":"<p>There are many tutorials on how to run a gatsby website with github pages, but most if not all of them are focused on how to generate a website for your repository.</p>\n<p>Github has a feature where it provides you with ability to host your static website, i.e. «username.github.io» and link a domain name to it.</p>\n<p>To do that you can create a repository <code class=\"language-text\">username.github.io</code>. You can find more info on that <a href=\"https://pages.github.com\">here</a></p>\n<p>Now the problem with gatsby and github pages is that the generated resources are not in the root folder of your repository and if you use <code class=\"language-text\">gh-pages</code> package it will rewrite all your source files when you publish.</p>\n<p>To fix that, you need to create a <code class=\"language-text\">dev</code> branch which will contain all your sources and add <code class=\"language-text\">deploy</code> script to your <code class=\"language-text\">package.json</code> that will contain following:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  …\n  scripts<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    deploy<span class=\"token operator\">:</span> 'gatsby build &amp;&amp; gh-pages -d public -b master'\n  <span class=\"token punctuation\">}</span>\n  …\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So when we run <code class=\"language-text\">npm run deploy</code> on dev branch gatsby builds sources from <code class=\"language-text\">dev</code> branch and gh-pages publishes the result to the root folder on <code class=\"language-text\">master</code> branch.</p>\n<h2>Custom domain name</h2>\n<p>If you have already setup a custom domain for github pages, you would notice that there has to be a <code class=\"language-text\">CNAME</code> file in the root folder of your repository that contains custom domain name.</p>\n<p>If we run <code class=\"language-text\">npm run deploy</code> this file would be deleted by generated website.</p>\n<p>To keep this file you will need to store it in <code class=\"language-text\">static</code> folder. You can find more info about static folder <a href=\"https://www.gatsbyjs.org/docs/static-folder/\">here</a>.</p>","frontmatter":{"title":"Running «Gatsby.js» blog with github pages","tags":["gatsby","git","github","blog"],"date":"2019-01-02T00:00:00.000Z"},"fields":{"slug":"/gatsby_github/"}}},"pageContext":{"slug":"/gatsby_github/","previous":{"fields":{"slug":"/git_refresh/"},"frontmatter":{"title":"Refresh commit date","tags":["git","commit","date"],"published":true,"slug":null},"fileAbsolutePath":"/builds/gko/gko-github-io/src/posts/git_refresh.md"},"next":{"fields":{"slug":"/raspberry_gitlab/"},"frontmatter":{"title":"Using raspberry as gitlab runner(with docker)","tags":["gitlab","raspberry","docker"],"published":true,"slug":null},"fileAbsolutePath":"/builds/gko/gko-github-io/src/posts/raspberry_gitlab.md"},"filename":"gatsby_github.md"}}